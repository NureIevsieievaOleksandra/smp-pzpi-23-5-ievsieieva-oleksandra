МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 2 з дисципліни
Скриптові мови програмування
   





Виконала:                                                                                     Перевірив:
ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІ
Євсєєва Олександра						Сокорчук Ігор Петрович









Харків 2025 
1 ІСТОРІЯ ЗМІН

№	Дата	Версія звіту	Опис змін та виправлень
1	09.06	1.0	Створено звіт

 
2 ЗАВДАННЯ

Потрібно створити консольний застосунок «Продовольчий магазин "Весна"».
Програма після запуску повинна вивести на термінал перелік можливих дій:
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Далі програма очікує введення значення з клавіатури. Якщо користувач вводить число, якого немає в списку можливих команд, необхідно вивести повідомлення про помилку і запропонувати користувачу ввести інше число:
Введіть команду: 4
ПОМИЛКА! Введіть правильну команду
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Щоб розпочати купувати товари, необхідно ввести число «1», після чого користувач повинен потрапити в режим закупівлі товарів.
На екрані має з’явитися перелік продуктів, де кожен рядок складається з номера, назви товару і його вартості, наприклад:
Введіть команду: 1
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: _
Щоб купити товар, необхідно ввести його номер.
Після успішної перевірки на існування номера товару в списку, програма має попросити ввести кількість товару:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 1
У КОШИКУ:
НАЗВА        КІЛЬКІСТЬ
Хліб чорний  1
Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то товар додається в кошик.
Якщо вказано кількість «0», то товар видаляється з кошика:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
КОШИК ПОРОЖНІЙ
Далі знову відображається перелік товарів і пропонується купити наступний товар.
Якщо номер товару вказано неправильно, виводиться сповіщення про помилку, нову виводиться перелік товарів:
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: 8
ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
Щоб завершити купувати товари і перейти до попереднього меню, необхідно ввести з клавіатури цифру «0».
Щоб отримати підсумковий рахунок, потрібно ввести число «2».
Рахунок має містити таку інформацію: №, назва, ціна товару, кількість товару, вартість товару. 
У кінці чека має бути: РАЗОМ ДО CПЛАТИ: сума_за_всі_товари
Наприклад:
Введіть команду: 2
№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Печиво "Весна"        14    1          14
2  Молоко пастеризоване  12    2          24
3  Сметана 20%           25    1          25
4  Хліб чорний           9     1          9
РАЗОМ ДО CПЛАТИ: 72
Щоб встановити свій профіль потрібно, ввести число «3», після чого програма попросить ввести ваше ім'я та ваш вік:
Ваше імʼя: _
Ваш вік: _
Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.
Користувач не може бути молодшим 7-ми або старшим 150-ти років
Щоб завершити роботу та вийти з програми, потрібно ввести число «0».
У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:
•	обраний пункт меню існує;
•	обраний товар існує;
•	введена кількість товару більша нуля;
•	імʼя користувача містить хча б одну літеру;
•	вік користувача становить від 7-ми до 150-ти років.
 
3 ОПИС ВИКОНАНОЇ РОБОТИ

	Почнемо із класу GroceryStore, який описує логіку магазину.
3 | class GroceryStore {
 4 |     private $products = [];
 5 |     private $cart = [];
 6 |     private $userName = '';
 7 |     private $userAge = 0;
 8 |     
 9 |     public function __construct() {
10 |         $this->loadProducts();

Метод __construct() викликається автоматично при створенні об'єкта. Він запускає метод loadProducts(), який читає JSON-файл з товарами. Якщо файл products.json не знайдено або JSON має помилку — виводиться повідомлення і програма завершується. Якщо все добре — товари завантажуються у змінну $products 
Перейдемо до головного циклу, він починаєтся із методу run. Метод run() — це нескінченний цикл програми. Виводиться головне меню і зчитується команда користувача. Залежно від вводу викликається відповідна функція: вибір товару, підсумок рахунку, налашування профілю або вихід.
30 |     public function run() {
31 |         while (true) {
32 |             $this->showMainMenu();
33 |             $command = $this->getInput("Введіть команду: ");
34 |             
35 |             switch ($command) {
36 |                 case '1':
37 |                     $this->selectProducts();
38 |                     break;
39 |                 case '2':
40 |                     $this->showBill();
41 |                     break;
42 |                 case '3':
43 |                     $this->setupProfile();
44 |                     break;
45 |                 case '0':
46 |                     echo "До побачення!\n";
47 |                     exit;
48 |                 default:
49 |                     $this->showError();
50 |             }
51 |         }
52 |     }

Методи showMainMenu() та showError() просто виводять інформаційні повідомлення. Вони є для полегшення розуміння користувача, що робити.
Переходимо до вибору товару selectProducts (див. Додаток А). Це ключовий метод, де користувач обирає товари. Користувач вводить номер товару та кількість. Якщо кількість — 0, товар видаляється з кошика. Інакше — додається до кошика. Як результат виводиться оновлений вміст кошика методом showCart.
Метод showProductList виводить перелік усіх товарів з номерами, назвами та цінами:
119|     private function showProductList() {
120|         echo "\n№  НАЗВА                 ЦІНА\n";
121|         foreach ($this->products as $id => $product) {
122|             printf("%-2d %-20s %d\n", $id, $product['name'], $product['price']);
123|         }
124|         echo "   -----------\n";
125|         echo "0  ПОВЕРНУТИСЯ\n";
126|     }

Метод showBill виводить табличку з рахунком: назва, ціна, кількість, загальна вартість по кожному товару.У кінці додає суму до сплати.
136|     private function showBill() {
137|         if (empty($this->cart)) {
138|             echo "\nКОШИК ПОРОЖНІЙ\n";
139|             return;
140|         }
141|         
142|         echo "\n№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
143|         $total = 0;
144|         $counter = 1;
145|         
146|         foreach ($this->cart as $item) {
147|             $cost = $item['price'] * $item['quantity'];
148|             printf("%-2d %-20s %-5d %-9d %d\n", 
149|                 $counter++, $item['name'], $item['price'], $item['quantity'], $cost);
150|             $total += $cost;
151|         }
152|         
153|         echo "РАЗОМ ДО CПЛАТИ: $total\n";
154|     }

Далі переходимо до налаштування профілю setupProfile. Тут користувач вводить ім’я та вік. Програма перевіряє, що ім’я не може бути порожнім і має містити літери; вік має бути від 7 до 150 років. Дані зберігаються у властивості $userName і $userAge.
	Ну і останній метод у кінці файлу відповідає за запитує з консолі дані у користувача:
204| try {
205|     $store = new GroceryStore();
206|     $store->run();
207| } catch (Exception $e) {
208|     echo "ПОМИЛКА: " . $e->getMessage() . "\n";
209| }

На цьому ми завершуємо створення консольного додатку. Тепер запустимо та перевіримо роботу.
 
Рисунок 1 – Демонстрація додавання продукту до кошику
 
Рисунок 2 – Демонстрація налаштування профілю
 
Рисунок 3 – Демонстрація підсумку до сплати
 
Рисунок 4 – Демонстрація виходу

 
4 ВИСНОВКИ

	Під час виконання лабораторної роботи було створено PHP-скрипт для магазину «Весна», який завантажує товари із JSON-файлу. Забезпечує можливість додавати та видаляти з кошика.
 
ДОДАТОК А
Програмний код
A.2 {products.json}
{
  "1": {
    "name": "Молоко пастеризоване",
    "price": 12
  },
  "2": {
    "name": "Хліб чорний",
    "price": 9
  },
  "3": {
    "name": "Сир білий",
    "price": 21
  },
  "4": {
    "name": "Сметана 20%",
    "price": 25
  },
  "5": {
    "name": "Кефір 1%",
    "price": 19
  },
  "6": {
    "name": "Вода газована",
    "price": 18
  },
  "7": {
    "name": "Печиво \"Весна\"",
    "price": 14
  }
}
А.2 {smp-pzpi-23-5-ievsieieva-oleksandra-lab2-code}
1 | <?php
 2 | 
 3 | class GroceryStore {
 4 |     private $products = [];
 5 |     private $cart = [];
 6 |     private $userName = '';
 7 |     private $userAge = 0;
 8 |     
 9 |     public function __construct() {
10 |         $this->loadProducts();
11 |     }
12 |     
13 |     private function loadProducts() {
14 |         $jsonFile = 'products.json';
15 |         
16 |         if (!file_exists($jsonFile)) {
17 |             echo "ПОМИЛКА! Файл products.json не знайдено!\n";
18 |             exit;
19 |         }
20 |         
21 |         $jsonData = file_get_contents($jsonFile);
22 |         $this->products = json_decode($jsonData, true);
23 |         
24 |         if (json_last_error() !== JSON_ERROR_NONE) {
25 |             echo "ПОМИЛКА! Некоректний формат JSON файлу!\n";
26 |             exit;
27 |         }
28 |     }
29 |     
30 |     public function run() {
31 |         while (true) {
32 |             $this->showMainMenu();
33 |             $command = $this->getInput("Введіть команду: ");
34 |             
35 |             switch ($command) {
36 |                 case '1':
37 |                     $this->selectProducts();
38 |                     break;
39 |                 case '2':
40 |                     $this->showBill();
41 |                     break;
42 |                 case '3':
43 |                     $this->setupProfile();
44 |                     break;
45 |                 case '0':
46 |                     echo "До побачення!\n";
47 |                     exit;
48 |                 default:
49 |                     $this->showError();
50 |             }
51 |         }
52 |     }
53 |     
54 |     private function showMainMenu() {
55 |         echo "\n################################\n";
56 |         echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
57 |         echo "################################\n";
58 |         echo "1 Вибрати товари\n";
59 |         echo "2 Отримати підсумковий рахунок\n";
60 |         echo "3 Налаштувати свій профіль\n";
61 |         echo "0 Вийти з програми\n";
62 |     }
63 |     
64 |     private function showError() {
65 |         echo "ПОМИЛКА! Введіть правильну команду\n";
66 |         echo "1 Вибрати товари\n";
67 |         echo "2 Отримати підсумковий рахунок\n";
68 |         echo "3 Налаштувати свій профіль\n";
69 |         echo "0 Вийти з програми\n";
70 |     }
71 |     
72 |     private function selectProducts() {
73 |         while (true) {
74 |             $this->showProductList();
75 |             $productId = $this->getInput("Виберіть товар: ");
76 |             
77 |             if ($productId === '0') {
78 |                 break;
79 |             }
80 |             
81 |             if (!isset($this->products[$productId])) {
82 |                 echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
83 |                 continue;
84 |             }
85 |             
86 |             $product = $this->products[$productId];
87 |             echo "Вибрано: " . $product['name'] . "\n";
88 |             
89 |             $quantity = $this->getInput("Введіть кількість, штук: ");
90 |             
91 |             if (!is_numeric($quantity) || $quantity < 0 || $quantity >= 100) {
92 |                 echo "ПОМИЛКА! Кількість повинна бути від 0 до 99\n";
93 |                 continue;
94 |             }
95 |             
96 |             $quantity = intval($quantity);
97 |             
98 |             if ($quantity === 0) {
99 |                 if (isset($this->cart[$productId])) {
100|                     unset($this->cart[$productId]);
101|                     echo "ВИДАЛЯЮ З КОШИКА\n";
102|                 }
103|                 if (empty($this->cart)) {
104|                     echo "КОШИК ПОРОЖНІЙ\n";
105|                 } else {
106|                     $this->showCart();
107|                 }
108|             } else {
109|                 $this->cart[$productId] = [
110|                     'name' => $product['name'],
111|                     'price' => $product['price'],
112|                     'quantity' => $quantity
113|                 ];
114|                 $this->showCart();
115|             }
116|         }
117|     }
118|     
119|     private function showProductList() {
120|         echo "\n№  НАЗВА                 ЦІНА\n";
121|         foreach ($this->products as $id => $product) {
122|             printf("%-2d %-20s %d\n", $id, $product['name'], $product['price']);
123|         }
124|         echo "   -----------\n";
125|         echo "0  ПОВЕРНУТИСЯ\n";
126|     }
127|     
128|     private function showCart() {
129|         echo "\nУ КОШИКУ:\n";
130|         echo "НАЗВА        КІЛЬКІСТЬ\n";
131|         foreach ($this->cart as $item) {
132|             printf("%-12s %d\n", $item['name'], $item['quantity']);
133|         }
134|     }
135|     
136|     private function showBill() {
137|         if (empty($this->cart)) {
138|             echo "\nКОШИК ПОРОЖНІЙ\n";
139|             return;
140|         }
141|         
142|         echo "\n№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
143|         $total = 0;
144|         $counter = 1;
145|         
146|         foreach ($this->cart as $item) {
147|             $cost = $item['price'] * $item['quantity'];
148|             printf("%-2d %-20s %-5d %-9d %d\n", 
149|                 $counter++, $item['name'], $item['price'], $item['quantity'], $cost);
150|             $total += $cost;
151|         }
152|         
153|         echo "РАЗОМ ДО CПЛАТИ: $total\n";
154|     }
155|     
156|     private function setupProfile() {
157|         echo "\n";
158|         
159|         while (true) {
160|             $name = $this->getInput("Ваше імʼя: ");
161|             
162|             if (empty(trim($name))) {
163|                 echo "ПОМИЛКА! Імʼя не може бути порожнім\n";
164|                 continue;
165|             }
166|             
167|             if (!preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄ]/u', $name)) {
168|                 echo "ПОМИЛКА! Імʼя повинно містити хоча б одну літеру\n";
169|                 continue;
170|             }
171|             
172|             $this->userName = trim($name);
173|             break;
174|         }
175|         
176|         while (true) {
177|             $age = $this->getInput("Ваш вік: ");
178|             
179|             if (!is_numeric($age)) {
180|                 echo "ПОМИЛКА! Вік повинен бути числом\n";
181|                 continue;
182|             }
183|             
184|             $age = intval($age);
185|             
186|             if ($age < 7 || $age > 150) {
187|                 echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років\n";
188|                 continue;
189|             }
190|             
191|             $this->userAge = $age;
192|             break;
193|         }
194|         
195|         echo "Профіль налаштовано: {$this->userName}, {$this->userAge} років\n";
196|     }
197|     
198|     private function getInput($prompt) {
199|         echo $prompt;
200|         return trim(fgets(STDIN));
201|     }
202| }
203| 
204| try {
205|     $store = new GroceryStore();
206|     $store->run();
207| } catch (Exception $e) {
208|     echo "ПОМИЛКА: " . $e->getMessage() . "\n";
209| }
210| 
211| ?>
